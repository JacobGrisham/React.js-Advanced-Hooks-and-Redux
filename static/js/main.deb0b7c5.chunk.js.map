{"version":3,"sources":["components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","components/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","style","overflowY","height","children","Card","id","name","email","useState","favorite","setFavorite","useEffect","console","log","className","onClick","marginLeft","border","outline","backgroundColor","color","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","setRobots","setSearchfield","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAUeA,MARf,SAAgBC,GACd,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,SAA3C,SACIH,EAAMI,Y,kCC6BCC,MA5Bf,YAAoC,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAAS,EAEDC,oBAAS,GAFR,mBAE1BC,EAF0B,KAEhBC,EAFgB,KAcjC,OANAC,qBAAU,WACRC,QAAQC,IAAIJ,KAGX,CAACA,IAGF,sBAAKK,UAAU,+CAAf,UACE,wBAAQC,QAZY,WACtBL,GAAY,IAW0BV,MAAO,CAAEgB,WAAY,OAASC,OAAQ,OAAQC,QAAS,OAAQC,gBAAiB,eAApH,SACIV,EAAW,cAAC,IAAD,CAAqBT,MAAO,CAAEoB,MAAO,SAAc,cAAC,IAAD,MAElE,qBAAKC,IAAI,QAAQC,IAAG,+BAA2BjB,EAA3B,cACpB,sBAAKL,MAAO,CAAEoB,MAAO,SAArB,UACE,6BAAMd,IACN,4BAAKC,W,MCCEgB,MAzBf,YAA+B,IAAXC,EAAU,EAAVA,OAElB,OACE,qBAAKV,UAAU,YAAf,SAIIU,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAKEtB,GAAKmB,EAAOG,GAAGtB,GACfC,KAAOkB,EAAOG,GAAGrB,KACjBC,MAAQiB,EAAOG,GAAGpB,OAHZiB,EAAOG,GAAGtB,UCFfuB,MAbf,YAAkD,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAChC,OACE,qBAAKhB,UAAU,MAAf,SACE,uBACEiB,KAAK,SACLC,YAAY,gBACZlB,UAAU,kBACVmB,SAAWH,O,+BCUJI,E,kDAhBb,WAAYnC,GAAO,IAAD,8BAChB,gBACKoC,MAAQ,CACXC,UAAU,GAHI,E,qDAOlB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAOG,KAAKJ,MAAMC,SAAW,8DAAwCG,KAAKxC,MAAMI,a,GAbxDsC,a,MC2CbC,MApCf,WAAe,MAGelC,mBAAS,IAHxB,mBAGNgB,EAHM,KAGEmB,EAHF,OAIyBnC,mBAAS,IAJlC,mBAINqB,EAJM,KAIOe,EAJP,KAMbjC,qBAAU,WACRkC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIN,EAAUM,QAGxB,IAEH,IAIMC,EAAiB1B,EAAO2B,QAAO,SAAAC,GACnC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASzB,EAAYwB,kBAGvD,OAAQ7B,EAAO+B,OACb,sBAAKzC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBAEA,cAAC,EAAD,CAAWgB,aAZQ,SAAC0B,GACtBZ,EAAeY,EAAMC,OAAOC,UAY1B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlC,OAAS0B,WAPH,6CCnBXS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.deb0b7c5.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Scroll(props) {\n  return(\n    <div style={{ overflowY: 'scroll', height: '600px' }}>\n      { props.children }\n    </div>\n  )\n}\n\nexport default Scroll;","import React, { useState, useEffect } from 'react';\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\n\n// Destructuring the properties and placing it in the parameters of the function for cleaner code\n// These properties, or props, were passed down from the parent component\nfunction Card({ id, name, email }) {\n\n  const [favorite, setFavorite] = useState(false);\n\n  const onClickFavorite = () => {\n    setFavorite(true)\n  }\n\n  useEffect(() => {\n    console.log(favorite);\n    // The second argument tells useEffect what to listen for to trigger an update\n    // Only run when favorite changes\n  }, [favorite])\n\n  return(\n    <div className='bg-gray dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\n      <button onClick={ onClickFavorite } style={{ marginLeft: 'auto',  border: 'none', outline: 'none', backgroundColor: 'transparent'}}>\n        { favorite ? <FavoriteRoundedIcon style={{ color: 'red' }} /> : <FavoriteBorderRoundedIcon/>}\n      </button>\n      <img alt='robot' src={`https://robohash.org/${ id }?200x200`}></img>\n      <div style={{ color: 'white' }}>\n        <h2>{ name }</h2>\n        <p>{ email }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport '../assets/CardList.css';\n\nfunction CardList({ robots }) {\n\n  return (\n    <div className='Card-list'>\n      {\n        // Using the ES6 map function to iterate over the robots object\n        // map has two parameters, the object name and the index\n        robots.map((user, i) => {\n          return (\n            <Card\n              // These are the properties that get passed to the Card component\n              // The key prop shouldn't change. Therefore we'll use id instead of index or i\n              // The key prop is required for React to effeiciently target specific DOM elements\n              key={ robots[i].id }\n              id={ robots[i].id }\n              name={ robots[i].name }\n              email={ robots[i].email }\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nfunction SearchBox({ searchfield, searchChange }) {\n  return (\n    <div className=\"pa2\">\n      <input\n        type='search'\n        placeholder='search robots'\n        className='pa3 ba b--white'\n        onChange={ searchChange }>\n      </input>\n    </div>\n  )\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props){\n    super()\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    return this.state.hasError ? <h1>Oooops. Something went wrong</h1> : this.props.children\n  }\n}\n\nexport default ErrorBoundary;","import React, { useState, useEffect } from 'react';\nimport Scroll from './Scroll'\nimport CardList from './CardList';\nimport SearchBox from './SearchBox'\nimport ErrorBoundary from './ErrorBoundary'\nimport '../assets/App.css';\n\n// the virtual DOM is just a javascript object that collects the state\n// React then passes the state to child components as props\nfunction App() {\n\n  // Create states using React Hooks\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState('');\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => setRobots(users));\n    // The second argument tells useEffect what to listen for to trigger an update\n    // An empty array is a shortcut for componentDidMount\n  }, [])\n\n  const onSearchChange = (event) => {\n    setSearchfield(event.target.value);\n  }\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  })\n  \n  return !robots.length ? <h1>Loading...</h1> : (\n    <div className='tc'>\n      <h1 className='f1'>RoboFriends</h1>\n      {/* Since App is an object, we need to reference functions and properties as the keyword this */}\n      <SearchBox searchChange={ onSearchChange }/>\n      <Scroll>\n        <ErrorBoundary>\n          <CardList robots={ filteredRobots }/>\n        </ErrorBoundary>\n      </Scroll>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}